-- FIRST I DOWNLOAD SPOITFYDATA.CSV FROM KAGGLE 

--THEN I CREATED THIS TABLE TO STORE THE DATA FROM .CSV FILE 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

--THEN I USED THE 'IMPORT' TOOL IN SQLLITESTUDIO TO IMPORT THE .CSV FILE TO FILL THE ABOVE TABLE WITH USEFUL DATA 



--FINALLY, I EXPLORED THE DATA WITH SQL COMMANDS TO ANSWSER SOME QUESTIONS THAT ONE MIGHT HAVE ABOUT THE DATA. 


--1. Determine which artist had most popular song from the top 50 songs. 
SELECT artist_name, track_name, popularity FROM BIT_DB.Spotifydata
ORDER BY popularity DESC LIMIT 1;

--2. Determine which artist had the most amount of track in the top 50. 
SELECT artist_name, COUNT(artist_name) as number_of_songs, track_name FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY number_of_songs DESC;

--3. Determine the top artists based on track popularity 
SELECT COUNT(artist_name), artist_name FROM BIT_DB.Spotifydata
GROUP BY artist_name HAVING COUNT(artist_name) > 2; 

--4. Determine the relationship between duration of songs with popularity 
SELECT artist_name, track_name, popularity, AVG(duration_ms) FROM BIT_DB.Spotifydata
GROUP BY artist_name HAVING popularity > 80
ORDER BY popularity DESC;
